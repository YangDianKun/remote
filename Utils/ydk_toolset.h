/*************************************** Copyright (c)******************************************************
** File name            :   ydk_toolset.h
** Latest modified Date :   2018-06-03
** Latest Version       :   0.1
** Descriptions         :   
**
**--------------------------------------------------------------------------------------------------------
** Created by           :   YangDianKun
** Created date         :   2018-06-03
** Version              :   1.0
** Descriptions         :   The original version
**
**--------------------------------------------------------------------------------------------------------
** Copyright            :  
** Author Email         :   1163101403@qq.com
**********************************************************************************************************/
#ifndef __YDK_TOOLSET_H
#define __YDK_TOOLSET_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>

#ifndef NULL
#define NULL ((void *)0)
#endif





/**********************************************************************************************************
**	函 数 名: ydk_ProtocolSum
**	功能说明: 计算校验和，用于数据协议校验
**	形    参: buf : 参与校验的数据
**			  len : 数据长度
**	返 回 值: 等于0形参非法，大于0返回的是校验和
**  注意：
***********************************************************************************************************/
extern uint8_t ydk_ProtocolSum(uint8_t *buf, uint32_t len);

/**********************************************************************************************************
**	函 数 名: ydk_CRC16Modbus
**	功能说明: 计算CRC。 用于Modbus协议。
**	形    参: _pBuf : 参与校验的数据
**			  _usLen : 数据长度
**	返 回 值: 16位整数值。 对于Modbus ，此结果高字节先传送，低字节后传送。
**
**   所有可能的CRC值都被预装在两个数组当中，当计算报文内容时可以简单的索引即可；
**   一个数组包含有16位CRC域的所有256个可能的高位字节，另一个数组含有低位字节的值；
**   这种索引访问CRC的方式提供了比对报文缓冲区的每一个新字符都计算新的CRC更快的方法；
**
**  注意：此程序内部执行高/低CRC字节的交换。此函数返回的是已经经过交换的CRC值；也就是说，该函数的返回值可以直接放置
**        于报文用于发送；
***********************************************************************************************************/
extern uint16_t ydk_CRC16Modbus(uint8_t *_pBuf, uint16_t _usLen);

/**********************************************************************************************************
**	函 数 名: ydk_ExchangeBytes
**	功能说明: 
**	形    参: 
**	返 回 值: 
**  注意：
***********************************************************************************************************/
extern uint16_t ydk_ExchangeBytes(uint16_t value);

/**********************************************************************************************************
**	函 数 名: ydk_ExchangeWord
**	功能说明: 
**	形    参: 
**	返 回 值: 
**  注意：
***********************************************************************************************************/
extern uint32_t ydk_ExchangeWord(uint32_t	value);

/**********************************************************************************************************
**	函 数 名: ydk_Str2Hex
**	功能说明: 
**	形    参: 
**	返 回 值: 
**  注意：
***********************************************************************************************************/
extern void ydk_Str2Hex(char *pbDest, char *pbSrc, int32_t nLen);

/**********************************************************************************************************
**	函 数 名: ydk_Hex2Str
**	功能说明: 
**	形    参: 
**	返 回 值: 
**  注意：
***********************************************************************************************************/
extern void ydk_Hex2Str(unsigned char *pbDest, unsigned char *pbSrc, int32_t nLen);


#ifdef __cplusplus
}
#endif

#endif
